<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- web.xml 中 shiro 的 filter 对应的 bean -->
    <!-- Shiro 的 Web 过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl 认证提交地址，如果没有认证将会请求此地址进行认证，
        请求此地址将由 formAuthenticationFilter 进行表单认证 -->
        <property name="loginUrl" value="/user/login"/>
        <!-- 认证成功统一跳转，建议不配置，shiro 认证成功自动到上一个请求路径 -->
        <property name="successUrl" value="/user/loginSuccess"/>
        <!-- 通过 unauthorizedUrl 指定没有权限操作时跳转页面-->
        <property name="unauthorizedUrl" value="/permission/refuse"/>
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- /** = authc 所有 url 都必须认证通过才可以访问-->
                <!-- /** = anon 所有 url 都可以匿名访问 -->

                <!-- 登录 -->
                /user/login = authc
                /user/loginSuccess = user
                /user/logcheck = user
                /user/logout = logout

                <!-- 权限 -->
                /file/datWeather = authc,perms[excel:download]

                <!-- 匿名访问 -->
                /** = anon
            </value>
        </property>
        <!-- 自定义过滤器 -->
        <property name="filters">
            <map>
                <entry key="logout" value-ref="logoutFilter" />
            </map>
        </property>
    </bean>
    <!-- 退出过滤器 -->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/user/logoutInfo" />
    </bean>
    <!-- securityManager 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- realm -->
    <bean id="userRealm" class="neau.cekong.shiro.UserRealm">
        <!-- 将凭证匹配器设置到 realm 中，realm 按照凭证匹配器的要求进行散列 -->
        <!-- property name="credentialsMatcher" ref="credentialsMatcher"/ -->
    </bean>
    <!-- 凭证匹配器 -->
    <!-- bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean -->
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置超时时间 ms -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/ -->
    </bean>

</beans>